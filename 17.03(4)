<Window x:Class="DuplicateFinder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Поиск дубликатов" Height="450" Width="800">
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Grid.Row="0">
            <TextBox x:Name="txtPath" Width="300" Margin="0,0,5,0"/>
            <Button Content="Выбрать папку" Click="Browse_Click" Width="100"/>
            <ComboBox x:Name="cmbAlgorithm" Margin="10,0" Width="120">
                <ComboBoxItem Content="SHA-256" IsSelected="True"/>
                <ComboBoxItem Content="MD5"/>
            </ComboBox>
            <Button Content="Найти дубликаты" Click="FindDuplicates_Click" Width="120"/>
        </StackPanel>

        <ProgressBar x:Name="pbProgress" Grid.Row="1" Height="20" Margin="0,5"/>

        <DataGrid x:Name="dgResults" Grid.Row="2" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Хэш" Binding="{Binding Key}" Width="300"/>
                <DataGridTemplateColumn Header="Файлы" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ListBox ItemsSource="{Binding Value}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock Text="{Binding Name}"/>
                                            <TextBlock Text="{Binding FullPath}" FontStyle="Italic"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>





using System.IO;
using System.Security.Cryptography;
using System.Windows;
using Microsoft.WindowsAPICodePack.Dialogs;

public partial class MainWindow : Window
{
    public MainWindow() => InitializeComponent();

    private void Browse_Click(object sender, RoutedEventArgs e)
    {
        var dialog = new CommonOpenFileDialog { IsFolderPicker = true };
        if (dialog.ShowDialog() == CommonFileDialogResult.Ok)
            txtPath.Text = dialog.FileName;
    }

    private async void FindDuplicates_Click(object sender, RoutedEventArgs e)
    {
        pbProgress.IsIndeterminate = true;
        var files = Directory.EnumerateFiles(txtPath.Text, "*", SearchOption.AllDirectories);
        var hashGroups = new Dictionary<string, List<FileInfo>>();

        await Task.Run(() =>
        {
            foreach (var file in files)
            {
                var fileInfo = new FileInfo(file);
                var hash = CalculateHash(fileInfo, cmbAlgorithm.SelectedIndex == 0);
                
                Dispatcher.Invoke(() =>
                {
                    if (!hashGroups.ContainsKey(hash))
                        hashGroups[hash] = new List<FileInfo>();
                    hashGroups[hash].Add(fileInfo);
                });
            }
        });

        dgResults.ItemsSource = hashGroups
            .Where(g => g.Value.Count > 1)
            .ToDictionary(g => g.Key, g => g.Value);
        
        pbProgress.IsIndeterminate = false;
    }

    private string CalculateHash(FileInfo file, bool useSha256)
    {
        using var algorithm = useSha256 ? SHA256.Create() : MD5.Create();
        using var stream = file.OpenRead();
        
        var hashBytes = algorithm.ComputeHash(stream);
        return BitConverter.ToString(hashBytes).Replace("-", "");
    }
}




